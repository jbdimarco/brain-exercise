{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jorge Aquino\\\\Documents\\\\GitHub\\\\brain-exercise\\\\src\\\\screens\\\\Settings\\\\SettingsScreen.jsx\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button } from \"react-native-elements\";\nimport PropTypes from \"prop-types\";\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: \"#f5f5f5\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  title: {\n    color: \"black\",\n    fontSize: 30,\n    padding: 30\n  },\n  button: {\n    padding: 30\n  }\n});\n\nfunction SettingsScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Settings\"), React.createElement(Button, {\n    title: \"Time Picker\",\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate(\"TimePicker\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Font Size\",\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate(\"Font Size\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n}\n\nSettingsScreen.propTypes = {\n  navigation: PropTypes.object\n};\nexport default SettingsScreen;","map":{"version":3,"sources":["C:/Users/Jorge Aquino/Documents/GitHub/brain-exercise/src/screens/Settings/SettingsScreen.jsx"],"names":["React","Button","PropTypes","styles","StyleSheet","create","root","flex","backgroundColor","alignItems","justifyContent","title","color","fontSize","padding","button","SettingsScreen","navigation","navigate","propTypes","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,MAAT,QAAuB,uBAAvB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,eAAe,EAAE,SAFb;AAGJC,IAAAA,UAAU,EAAE,QAHR;AAIJC,IAAAA,cAAc,EAAE;AAJZ,GADyB;AAO/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,OADF;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,OAAO,EAAE;AAHJ,GAPwB;AAY/BC,EAAAA,MAAM,EAAE;AACND,IAAAA,OAAO,EAAE;AADH;AAZuB,CAAlB,CAAf;;AAkBA,SAASE,cAAT,OAAwC;AAAA,MAAdC,UAAc,QAAdA,UAAc;AACtC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACQ,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,KAAK,EAAER,MAAM,CAACY,MAFhB;AAGE,IAAA,OAAO,EAAE;AAAA,aAAME,UAAU,CAACC,QAAX,CAAoB,YAApB,CAAN;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,KAAK,EAAEf,MAAM,CAACY,MAFhB;AAGE,IAAA,OAAO,EAAE;AAAA,aAAME,UAAU,CAACC,QAAX,CAAoB,WAApB,CAAN;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAeD;;AAEDF,cAAc,CAACG,SAAf,GAA2B;AACzBF,EAAAA,UAAU,EAAEf,SAAS,CAACkB;AADG,CAA3B;AAIA,eAAeJ,cAAf","sourcesContent":["import React from \"react\"; // useState\r\nimport { View, Text, StyleSheet } from \"react-native\"; // Switch,\r\nimport { Button } from \"react-native-elements\";\r\n// import DateTimePicker from \"@react-native-community/datetimepicker\";\r\nimport PropTypes from \"prop-types\";\r\n// import SwitchToggle from \"./Components/SwitchToggle.jsx\";\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    flex: 1,\r\n    backgroundColor: \"#f5f5f5\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  title: {\r\n    color: \"black\",\r\n    fontSize: 30,\r\n    padding: 30,\r\n  },\r\n  button: {\r\n    padding: 30,\r\n  },\r\n});\r\n\r\n// Settings Navigation\r\nfunction SettingsScreen({ navigation }) {\r\n  return (\r\n    <View style={styles.root}>\r\n      <Text style={styles.title}>Settings</Text>\r\n      <Button\r\n        title=\"Time Picker\"\r\n        style={styles.button}\r\n        onPress={() => navigation.navigate(\"TimePicker\")}\r\n      />\r\n      <Button\r\n        title=\"Font Size\"\r\n        style={styles.button}\r\n        onPress={() => navigation.navigate(\"Font Size\")}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nSettingsScreen.propTypes = {\r\n  navigation: PropTypes.object,\r\n};\r\n\r\nexport default SettingsScreen;\r\n\r\n// Settings Screen Content\r\n\r\n// const styles02 = StyleSheet.create({\r\n//   root: {\r\n//     flex: 1,\r\n//     backgroundColor: \"#f5f5f5\",\r\n//     paddingVertical: 30,\r\n//   },\r\n//   intermediate: {\r\n//     width: \"100%\",\r\n//     flexDirection: \"row\",\r\n//     justifyContent: \"space-between\",\r\n//     alignItems: \"center\",\r\n//     paddingHorizontal: 20,\r\n//     marginBottom: 130,\r\n//   },\r\n//   notificationText: {\r\n//     fontSize: 25,\r\n//   },\r\n// });\r\n\r\n// function Settings() {\r\n//   const [isEnabled, setIsEnabled] = useState(false);\r\n//   const toggleSwitch = () => setIsEnabled((previousState) => !previousState);\r\n//   const [date, setDate] = useState(new Date(1598051730000));\r\n//   const [mode] = useState(\"time\");\r\n\r\n//   const onChange = (event, selectedDate) => {\r\n//     const currentDate = selectedDate || date;\r\n//     setDate(currentDate);\r\n//   };\r\n\r\n//   return (\r\n//     <View style={styles02.root}>\r\n//       <View style={styles02.intermediate}>\r\n//         <Text style={styles02.notificationText}>Notifications</Text>\r\n//         <Switch\r\n//           trackColor={{ false: \"#767577\", true: \"#4169e1\" }}\r\n//           ios_backgroundColor=\"#3e3e3e\"\r\n//           onValueChange={toggleSwitch}\r\n//           value={isEnabled}\r\n//         />\r\n//       </View>\r\n//       <View>\r\n//         {isEnabled && (\r\n//           <DateTimePicker\r\n//             testID=\"dateTimePicker\"\r\n//             value={date}\r\n//             mode={mode}\r\n//             is24Hour={true}\r\n//             display=\"default\"\r\n//             onChange={onChange}\r\n//           />\r\n//         )}\r\n//       </View>\r\n//     </View>\r\n//   );\r\n// }\r\n\r\n// export default { SettingsScreen };\r\n"]},"metadata":{},"sourceType":"module"}