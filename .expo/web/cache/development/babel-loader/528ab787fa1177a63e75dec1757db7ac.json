{"ast":null,"code":"import { Notifications } from \"expo\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\n\nvar getNotificationTimeDifference = function getNotificationTimeDifference(date, i) {\n  return date.getTime() + i * 86400000;\n};\n\nvar scheduleNotifications = function scheduleNotifications(inputDate) {\n  AsyncStorage.setItem(\"notificationHours\", inputDate.getHours().toString());\n  AsyncStorage.setItem(\"notificationMinutes\", inputDate.getMinutes().toString());\n  var date = new Date();\n  date.setMinutes(inputDate.getMinutes());\n  date.setHours(inputDate.getHours());\n  date.setSeconds(0);\n\n  if (typeof date === \"object\") {\n    var days = [\"Sunday (NEVER USED)\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n\n    for (var i = 0; i < 7; i += 1) {\n      var day = (date.getDay() + i) % 7;\n\n      if (!(day === 0 || day === 6)) {\n        var dayText = days[day];\n        var localNotification = {\n          title: dayText,\n          text: \"Reminder for Brain Games!\"\n        };\n        var schedulingOptions = {\n          time: getNotificationTimeDifference(date, i),\n          repeat: \"week\"\n        };\n        Notifications.scheduleLocalNotificationAsync(localNotification, schedulingOptions);\n      }\n    }\n  }\n};\n\nexport default scheduleNotifications;","map":{"version":3,"sources":["C:/Users/Jorge Aquino/Documents/GitHub/brain-exercise/src/scripts/notification-logic.js"],"names":["Notifications","getNotificationTimeDifference","date","i","getTime","scheduleNotifications","inputDate","AsyncStorage","setItem","getHours","toString","getMinutes","Date","setMinutes","setHours","setSeconds","days","day","getDay","dayText","localNotification","title","text","schedulingOptions","time","repeat","scheduleLocalNotificationAsync"],"mappings":"AAAA,SAASA,aAAT,QAA8B,MAA9B;;;AAaA,IAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACC,IAAD,EAAOC,CAAP,EAAa;AACjD,SAAOD,IAAI,CAACE,OAAL,KAAiBD,CAAC,GAAG,QAA5B;AACD,CAFD;;AASA,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,SAAD,EAAe;AAC3CC,EAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EAA0CF,SAAS,CAACG,QAAV,GAAqBC,QAArB,EAA1C;AACAH,EAAAA,YAAY,CAACC,OAAb,CACE,qBADF,EAEEF,SAAS,CAACK,UAAV,GAAuBD,QAAvB,EAFF;AAIA,MAAMR,IAAI,GAAG,IAAIU,IAAJ,EAAb;AACAV,EAAAA,IAAI,CAACW,UAAL,CAAgBP,SAAS,CAACK,UAAV,EAAhB;AACAT,EAAAA,IAAI,CAACY,QAAL,CAAcR,SAAS,CAACG,QAAV,EAAd;AACAP,EAAAA,IAAI,CAACa,UAAL,CAAgB,CAAhB;;AAEA,MAAI,OAAOb,IAAP,KAAgB,QAApB,EAA8B;AAC5B,QAAMc,IAAI,GAAG,CACX,qBADW,EAEX,QAFW,EAGX,SAHW,EAIX,WAJW,EAKX,UALW,EAMX,QANW,CAAb;;AASA,SAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,IAAI,CAA5B,EAA+B;AAE7B,UAAMc,GAAG,GAAG,CAACf,IAAI,CAACgB,MAAL,KAAgBf,CAAjB,IAAsB,CAAlC;;AAEA,UAAI,EAAEc,GAAG,KAAK,CAAR,IAAaA,GAAG,KAAK,CAAvB,CAAJ,EAA+B;AAE7B,YAAME,OAAO,GAAGH,IAAI,CAACC,GAAD,CAApB;AACA,YAAMG,iBAAiB,GAAG;AACxBC,UAAAA,KAAK,EAAEF,OADiB;AAExBG,UAAAA,IAAI,EAAE;AAFkB,SAA1B;AAIA,YAAMC,iBAAiB,GAAG;AACxBC,UAAAA,IAAI,EAAEvB,6BAA6B,CAACC,IAAD,EAAOC,CAAP,CADX;AAExBsB,UAAAA,MAAM,EAAE;AAFgB,SAA1B;AAIAzB,QAAAA,aAAa,CAAC0B,8BAAd,CACEN,iBADF,EAEEG,iBAFF;AAID;AACF;AACF;AACF,CA3CD;;AA6CA,eAAelB,qBAAf","sourcesContent":["import { Notifications } from \"expo\";\r\n/**\r\n * Globally stores notification settings in <Day, Time of notification> pairs\r\n * Both key and value are stored as strings\r\n */\r\nimport { AsyncStorage } from \"react-native\";\r\n\r\n/**\r\n * Returns the a number in Unix epoch time representing next notification\r\n * @param date current day\r\n * @param i number of days from current day to schedule notification\r\n * @return Promise for number that represents next scheduled notification\r\n */\r\nconst getNotificationTimeDifference = (date, i) => {\r\n  return date.getTime() + i * 86400000;\r\n};\r\n\r\n/**\r\n * Schedules notifications for every day S/M/T/W/R/F/S\r\n * Stores hour and minute of notification time in Async storage. All times are in UTC\r\n * @param date Date object, the time to set all of the notifications to\r\n */\r\nconst scheduleNotifications = (inputDate) => {\r\n  AsyncStorage.setItem(\"notificationHours\", inputDate.getHours().toString());\r\n  AsyncStorage.setItem(\r\n    \"notificationMinutes\",\r\n    inputDate.getMinutes().toString()\r\n  );\r\n  const date = new Date();\r\n  date.setMinutes(inputDate.getMinutes());\r\n  date.setHours(inputDate.getHours());\r\n  date.setSeconds(0);\r\n\r\n  if (typeof date === \"object\") {\r\n    const days = [\r\n      \"Sunday (NEVER USED)\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n    ];\r\n\r\n    for (let i = 0; i < 7; i += 1) {\r\n      // for the next 7 days\r\n      const day = (date.getDay() + i) % 7;\r\n\r\n      if (!(day === 0 || day === 6)) {\r\n        // skip saturday and sunday\r\n        const dayText = days[day];\r\n        const localNotification = {\r\n          title: dayText,\r\n          text: \"Reminder for Brain Games!\", // some encouraging message\r\n        };\r\n        const schedulingOptions = {\r\n          time: getNotificationTimeDifference(date, i),\r\n          repeat: \"week\",\r\n        };\r\n        Notifications.scheduleLocalNotificationAsync(\r\n          localNotification,\r\n          schedulingOptions\r\n        );\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default scheduleNotifications;\r\n"]},"metadata":{},"sourceType":"module"}