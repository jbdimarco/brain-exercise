{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jorge Aquino\\\\Documents\\\\GitHub\\\\brain-exercise\\\\src\\\\screens\\\\Game\\\\ReadingIntro.jsx\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Button } from \"react-native-elements\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport PropTypes from \"prop-types\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { sampleArticle, otherInterestingText } from \"../../assets/stories\";\nvar styles = StyleSheet.create({\n  root: {\n    justifyContent: \"space-between\",\n    flex: 1,\n    margin: 25,\n    marginVertical: 60,\n    alignItems: \"center\"\n  },\n  instructions: {\n    fontSize: 22,\n    marginVertical: 20,\n    textAlign: \"center\"\n  },\n  headInstruction: {\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n    fontSize: 30\n  },\n  nextButton: {\n    borderRadius: 5,\n    marginTop: 20,\n    height: 55,\n    width: 320,\n    backgroundColor: \"#005AA3\"\n  }\n});\n\nvar image = require(\"../../assets/books.png\");\n\nexport var defaultStories = {\n  article1: {\n    text: otherInterestingText,\n    readAlready: false\n  },\n  article2: {\n    text: sampleArticle,\n    readAlready: false\n  }\n};\n\nvar pullStories = function pullStories() {\n  var jsonStories, parsedStories;\n  return _regeneratorRuntime.async(function pullStories$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"STORIES\"));\n\n        case 2:\n          jsonStories = _context.sent;\n\n          if (!(jsonStories !== null)) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(JSON.parse(jsonStories));\n\n        case 6:\n          parsedStories = _context.sent;\n          return _context.abrupt(\"return\", parsedStories);\n\n        case 8:\n          return _context.abrupt(\"return\", defaultStories);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nfunction ReadingIntro(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(defaultStories),\n      _useState2 = _slicedToArray(_useState, 2),\n      stories = _useState2[0],\n      setStories = _useState2[1];\n\n  useFocusEffect(React.useCallback(function () {\n    pullStories().then(function (item) {\n      return setStories(item);\n    });\n  }));\n  return React.createElement(View, {\n    style: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: image,\n    style: styles.Image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.instructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.headInstruction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Read the following passage aloud\"), React.createElement(Text, {\n    style: styles.instructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Total time: 10 minutes\")), React.createElement(Button, {\n    title: \"Start Reading\",\n    buttonStyle: styles.nextButton,\n    onPress: function onPress() {\n      return navigation.navigate(\"ReadingMain\", stories);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }));\n}\n\nReadingIntro.propTypes = {\n  navigation: PropTypes.object\n};\nexport default ReadingIntro;","map":{"version":3,"sources":["C:/Users/Jorge Aquino/Documents/GitHub/brain-exercise/src/screens/Game/ReadingIntro.jsx"],"names":["React","useState","Button","AsyncStorage","PropTypes","useFocusEffect","sampleArticle","otherInterestingText","styles","StyleSheet","create","root","justifyContent","flex","margin","marginVertical","alignItems","instructions","fontSize","textAlign","headInstruction","fontWeight","nextButton","borderRadius","marginTop","height","width","backgroundColor","image","require","defaultStories","article1","text","readAlready","article2","pullStories","getItem","jsonStories","JSON","parse","parsedStories","ReadingIntro","navigation","stories","setStories","useCallback","then","item","Image","navigate","propTypes","object"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet, Image } from \"react-native\";\r\nimport { Button } from \"react-native-elements\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useFocusEffect } from \"@react-navigation/native\";\r\nimport { sampleArticle, otherInterestingText } from \"../../assets/stories\";\r\n\r\nconst styles = StyleSheet.create({\r\n    root: {\r\n        justifyContent: \"space-between\",\r\n        flex: 1,\r\n        margin: 25,\r\n        marginVertical: 60,\r\n        alignItems: \"center\"\r\n    },\r\n    instructions: {\r\n        fontSize: 22,\r\n        marginVertical: 20,\r\n        textAlign: \"center\",\r\n    },\r\n    headInstruction: {\r\n        textAlign: \"center\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 30,\r\n    },\r\n    nextButton: {\r\n        borderRadius: 5,\r\n        marginTop: 20,\r\n        height: 55,\r\n        width: 320,\r\n        backgroundColor: \"#005AA3\",\r\n    },\r\n});\r\n\r\nconst image = require(\"../../assets/books.png\");\r\n\r\n// Each article has a readAlready field to check if it should be presented again\r\n// The text is a text array where the text is split up by \\n characters\r\nexport const defaultStories = {\r\n    article1: {\r\n        text: otherInterestingText,\r\n        readAlready: false,\r\n    },\r\n    article2: {\r\n        text: sampleArticle,\r\n        readAlready: false,\r\n    }\r\n};\r\n\r\nconst pullStories = async () => {\r\n    const jsonStories = await AsyncStorage.getItem(\"STORIES\")\r\n    if (jsonStories !== null) {\r\n        const parsedStories = await JSON.parse(jsonStories)\r\n        return parsedStories\r\n    }\r\n    return defaultStories\r\n}\r\n\r\nfunction ReadingIntro({ navigation }) {\r\n    const [stories, setStories] = useState(defaultStories)\r\n    // Update stories when page is loaded\r\n    useFocusEffect(\r\n        React.useCallback(() => {\r\n            pullStories()\r\n            .then((item) => setStories(item))\r\n        })\r\n    )\r\n\r\n    return (\r\n        <View style={styles.root}>\r\n            <Image \r\n             source={image}\r\n             style={styles.Image}\r\n            />\r\n            <View style={styles.instructions}>\r\n                <Text style={styles.headInstruction}>Read the following passage aloud</Text>\r\n                <Text style={styles.instructions}>Total time: 10 minutes</Text>\r\n            </View>\r\n            <Button\r\n            title=\"Start Reading\"\r\n            buttonStyle={styles.nextButton}\r\n            onPress={() => navigation.navigate(\"ReadingMain\", stories)}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nReadingIntro.propTypes = {\r\n    navigation: PropTypes.object,\r\n}\r\n\r\nexport default ReadingIntro;"]},"metadata":{},"sourceType":"module"}